name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

jobs:
  test-services:
    name: Test Services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: subscription
            path: services/subscription
            has-db: true
            has-mailhog: true
            mailhog-port: 1026
            mailhog-web-port: 8026
          - name: email
            path: services/email
            has-db: false
            has-mailhog: true
            mailhog-port: 1025
            mailhog-web-port: 8025
          - name: token
            path: services/token
            has-db: false
            has-mailhog: false
          - name: weather-broadcast
            path: services/weather-broadcast
            has-db: true
            has-mailhog: true
            mailhog-port: 1027
            mailhog-web-port: 8027
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Download dependencies for ${{ matrix.service.name }}
      run: |
        cd ${{ matrix.service.path }}
        go mod download
        go mod tidy
    
    - name: Install mockery
      run: go install github.com/vektra/mockery/v2@latest
    
    - name: Generate Mocks for ${{ matrix.service.name }}
      run: |
        cd ${{ matrix.service.path }}
        mockery --all --output tests/mocks --outpkg mocks
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ matrix.service.name }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ matrix.service.name }}-
          ${{ runner.os }}-buildx-
    
    - name: Start PostgreSQL
      if: matrix.service.has-db == 'true'
      run: |
        docker run -d --name postgres-${{ matrix.service.name }} \
          -e POSTGRES_DB=${{ matrix.service.name }}_test \
          -e POSTGRES_USER=test \
          -e POSTGRES_PASSWORD=test \
          -p 5432:5432 \
          postgres:15
    
    - name: Start MailHog
      if: matrix.service.has-mailhog == 'true'
      run: |
        docker run -d --name mailhog-${{ matrix.service.name }} \
          -p ${{ matrix.service.mailhog-port }}:1025 \
          -p ${{ matrix.service.mailhog-web-port }}:8025 \
          mailhog/mailhog:latest
    
    - name: Wait for services
      if: matrix.service.has-db == 'true' || matrix.service.has-mailhog == 'true'
      run: sleep 10
    
    - name: Run ${{ matrix.service.name }} tests
      run: |
        cd ${{ matrix.service.path }}
        docker build -f Dockerfile.test -t ${{ matrix.service.name }}-service-tests .
        docker run --rm --network host \
          -e MAILHOG_HOST=localhost \
          -e MAILHOG_PORT=${{ matrix.service.mailhog-port }} \
          -e MAILHOG_WEB_PORT=${{ matrix.service.mailhog-web-port }} \
          ${{ matrix.service.name }}-service-tests