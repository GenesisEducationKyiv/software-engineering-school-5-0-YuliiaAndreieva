name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

jobs:
  architecture-tests:
    name: Architecture Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go Environment
      uses: ./.github/actions/setup
    
    - name: Install arch-go
      run: go install github.com/arch-go/arch-go@latest
    
    - name: Run Architecture Tests
      run: arch-go

  email-service-tests:
    name: Email Service Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go Environment
      uses: ./.github/actions/setup
    
    - name: Start MailHog
      run: docker run -d --name mailhog -p 1025:1025 -p 8025:8025 mailhog/mailhog:latest
    
    - name: Wait for MailHog
      run: sleep 5
    
    - name: Run Email Service Tests
      run: |
        cd services/email
        go test -v ./tests/...

  subscription-service-tests:
    name: Subscription Service Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go Environment
      uses: ./.github/actions/setup
    
    - name: Start PostgreSQL
      run: |
        docker run -d --name postgres-subscription \
          -e POSTGRES_DB=subscription_test \
          -e POSTGRES_USER=test \
          -e POSTGRES_PASSWORD=test \
          -p 5432:5432 \
          postgres:15
    
    - name: Start MailHog
      run: docker run -d --name mailhog-subscription -p 1026:1025 -p 8026:8025 mailhog/mailhog:latest
    
    - name: Wait for services
      run: sleep 10
    
    - name: Run Subscription Service Tests
      run: |
        cd services/subscription
        go test -v ./tests/...

  token-service-tests:
    name: Token Service Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go Environment
      uses: ./.github/actions/setup
    
    - name: Run Token Service Tests
      run: |
        cd services/token
        go test -v ./tests/...

  weather-broadcast-service-tests:
    name: Weather Broadcast Service Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go Environment
      uses: ./.github/actions/setup
    
    - name: Run Weather Broadcast Service Tests
      run: |
        cd services/weather-broadcast
        go test -v ./tests/...

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Go Environment
      uses: ./.github/actions/setup
    
    - name: Start Integration Test Environment
      run: docker compose -f docker-compose.test.yml up -d postgres-integration mailhog
    
    - name: Wait for services
      run: sleep 15
    
    - name: Run Integration Tests
      run: go test -v ./tests/integration/... -tags=integration
    
    - name: Stop Integration Test Environment
      if: always()
      run: docker compose -f docker-compose.test.yml down

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go Environment
      uses: ./.github/actions/setup
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: tests/package-lock.json
    
    - name: Start E2E Test Environment
      run: docker compose -f docker-compose.test.yml up -d postgres-e2e mailhog
    
    - name: Wait for services
      run: sleep 15
    
    - name: Install Playwright dependencies
      working-directory: tests
      run: |
        npm ci
        npx playwright install --with-deps
    
    - name: Run E2E Tests
      working-directory: tests
      run: npm run test:e2e
    
    - name: Stop E2E Test Environment
      if: always()
      run: docker compose -f docker-compose.test.yml down