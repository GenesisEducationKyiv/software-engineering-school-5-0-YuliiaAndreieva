name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

jobs:
  email-service-tests:
    name: Email Service Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Install mockery
      run: go install github.com/vektra/mockery/v2@latest
    
    - name: Generate Mocks for Email Service
      run: |
        cd services/email
        mockery --all --output tests/mocks --outpkg mocks
    
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Start MailHog
      run: |
        docker run -d --name mailhog-email \
          -p 1025:1025 \
          -p 8025:8025 \
          mailhog/mailhog:latest
    
    - name: Wait for MailHog
      run: sleep 5
    
    - name: Run Email Service Tests
      run: |
        cd services/email
        docker build -f Dockerfile.test -t email-service-tests .
        docker run --rm --network host email-service-tests

  subscription-service-tests:
    name: Subscription Service Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Install mockery
      run: go install github.com/vektra/mockery/v2@latest
    
    - name: Generate Mocks for Subscription Service
      run: |
        cd services/subscription
        mockery --all --output tests/mocks --outpkg mocks
    
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Start PostgreSQL
      run: |
        docker network create subscription-test-network
        docker run -d --name postgres-subscription \
          --network subscription-test-network \
          -e POSTGRES_DB=subscription_test \
          -e POSTGRES_USER=test \
          -e POSTGRES_PASSWORD=test \
          -p 5432:5432 \
          postgres:15
    
    - name: Start MailHog
      run: |
        docker run -d --name mailhog-subscription \
          --network subscription-test-network \
          -p 1026:1025 \
          -p 8026:8025 \
          mailhog/mailhog:latest
    
    - name: Wait for services
      run: sleep 10
    
    - name: Run Subscription Service Tests
      run: |
        cd services/subscription
        docker build -f Dockerfile.test -t subscription-service-tests .
        docker run --rm --network subscription-test-network -e TEST_DB_HOST=postgres-subscription subscription-service-tests

  token-service-tests:
    name: Token Service Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Run Token Service Tests
      run: |
        cd services/token
        docker build -f Dockerfile.test -t token-service-tests .
        docker run --rm token-service-tests

  weather-broadcast-service-tests:
    name: Weather Broadcast Service Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Start PostgreSQL
      run: |
        docker run -d --name postgres-weather-broadcast \
          -e POSTGRES_DB=weather_broadcast_test \
          -e POSTGRES_USER=test \
          -e POSTGRES_PASSWORD=test \
          -p 5432:5432 \
          postgres:15
    
    - name: Start MailHog
      run: |
        docker run -d --name mailhog-weather-broadcast \
          -p 1027:1025 \
          -p 8027:8025 \
          mailhog/mailhog:latest
    
    - name: Wait for services
      run: sleep 10
    
    - name: Run Weather Broadcast Service Tests
      run: |
        cd services/weather-broadcast
        docker build -f Dockerfile.test -t weather-broadcast-service-tests .
        docker run --rm --network host weather-broadcast-service-tests