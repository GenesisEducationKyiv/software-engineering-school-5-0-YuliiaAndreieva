name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

env:
  GO111MODULE: on
  GOPROXY: https://proxy.golang.org,direct
  GOSUMDB: sum.golang.org

jobs:
  email-service-tests:
    name: Email Service Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go Environment
      uses: ./.github/actions/setup
    
    - name: Initialize Go workspace
      run: |
        go work init
        go work use ./services/email
        go work use ./services/subscription
        go work use ./services/token
        go work use ./services/weather
        go work use ./services/weather-broadcast
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('services/subscription/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Start MailHog
      run: |
        docker run -d --name mailhog-email \
          -p 1025:1025 \
          -p 8025:8025 \
          mailhog/mailhog:latest
    
    - name: Wait for MailHog
      run: sleep 5
    
    - name: Run Email Service Tests
      working-directory: ./services/email
      run: |
        go env -w GO111MODULE=on
        go env -w GOPROXY=https://proxy.golang.org,direct
        go env -w GOSUMDB=sum.golang.org
        go mod tidy
        go mod download
        go test -v ./tests/...

  subscription-service-tests:
    name: Subscription Service Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go Environment
      uses: ./.github/actions/setup
    
    - name: Initialize Go workspace
      run: |
        go work init
        go work use ./services/email
        go work use ./services/subscription
        go work use ./services/token
        go work use ./services/weather
        go work use ./services/weather-broadcast
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('services/token/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Start PostgreSQL
      run: |
        docker run -d --name postgres-subscription \
          -e POSTGRES_DB=subscription_test \
          -e POSTGRES_USER=test \
          -e POSTGRES_PASSWORD=test \
          -p 5432:5432 \
          postgres:15
    
    - name: Start MailHog
      run: |
        docker run -d --name mailhog-subscription \
          -p 1026:1025 \
          -p 8026:8025 \
          mailhog/mailhog:latest
    
    - name: Wait for services
      run: sleep 10
    
    - name: Run Subscription Service Tests
      working-directory: ./services/subscription
      run: |
        go env -w GO111MODULE=on
        go env -w GOPROXY=https://proxy.golang.org,direct
        go env -w GOSUMDB=sum.golang.org
        go mod tidy
        go mod download
        go test -v ./tests/...

  token-service-tests:
    name: Token Service Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go Environment
      uses: ./.github/actions/setup
    
    - name: Initialize Go workspace
      run: |
        go work init
        go work use ./services/email
        go work use ./services/subscription
        go work use ./services/token
        go work use ./services/weather
        go work use ./services/weather-broadcast
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('services/weather-broadcast/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Run Token Service Tests
      working-directory: ./services/token
      run: |
        go env -w GO111MODULE=on
        go env -w GOPROXY=https://proxy.golang.org,direct
        go env -w GOSUMDB=sum.golang.org
        go mod tidy
        go mod download
        go test -v ./tests/...

  weather-broadcast-service-tests:
    name: Weather Broadcast Service Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go Environment
      uses: ./.github/actions/setup
    
    - name: Initialize Go workspace
      run: |
        go work init
        go work use ./services/email
        go work use ./services/subscription
        go work use ./services/token
        go work use ./services/weather
        go work use ./services/weather-broadcast
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('services/weather-broadcast/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Start PostgreSQL
      run: |
        docker run -d --name postgres-weather-broadcast \
          -e POSTGRES_DB=weather_broadcast_test \
          -e POSTGRES_USER=test \
          -e POSTGRES_PASSWORD=test \
          -p 5432:5432 \
          postgres:15
    
    - name: Start MailHog
      run: |
        docker run -d --name mailhog-weather-broadcast \
          -p 1027:1025 \
          -p 8027:8025 \
          mailhog/mailhog:latest
    
    - name: Wait for services
      run: sleep 10
    
    - name: Run Weather Broadcast Service Tests
      working-directory: ./services/weather-broadcast
      run: |
        go env -w GO111MODULE=on
        go env -w GOPROXY=https://proxy.golang.org,direct
        go env -w GOSUMDB=sum.golang.org
        go mod tidy
        go mod download
        go test -v ./tests/...