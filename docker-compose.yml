services:
  email-service:
    build:
      context: .
      dockerfile: services/email/Dockerfile
    container_name: email-service
    ports:
      - "8081:8081"
    env_file:
      - services/email/.env
    environment:
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
    networks:
      - weather-network

  subscription-service:
    build:
      context: .
      dockerfile: services/subscription/Dockerfile
    container_name: subscription-service
    ports:
      - "8082:8082"
    env_file:
      - services/subscription/.env
    environment:
      - DATABASE_DSN=host=postgres user=postgres password=postgres dbname=subscriptions port=5432 sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
      email-service:
        condition: service_started
      token-service:
        condition: service_started
    networks:
      - weather-network

  token-service:
    build:
      context: .
      dockerfile: services/token/Dockerfile
    container_name: token-service
    ports:
      - "8083:8083"
    env_file:
      - services/token/.env
    networks:
      - weather-network

  weather-service:
    build:
      context: .
      dockerfile: services/weather/Dockerfile
    container_name: weather-service
    ports:
      - "8084:8084"
    env_file:
      - services/weather/.env
    environment:
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - REDIS_ADDRESS=redis:6379
    depends_on:
      - redis
    networks:
      - weather-network

  weather-broadcast-service:
    build:
      context: .
      dockerfile: services/weather-broadcast/Dockerfile
    container_name: weather-broadcast-service
    ports:
      - "8085:8085"
    env_file:
      - services/weather-broadcast/.env
    environment:
      - SUBSCRIPTION_SERVICE_URL=http://subscription-service:8082
      - WEATHER_SERVICE_URL=http://weather-service:8084
      - EMAIL_SERVICE_URL=http://email-service:8081
    depends_on:
      - email-service
      - subscription-service
      - weather-service
    networks:
      - weather-network

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      - POSTGRES_DB=subscriptions
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - weather-network

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - weather-network

volumes:
  postgres_data:

networks:
  weather-network:
    driver: bridge