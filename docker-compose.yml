services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      - DB_CONN_STR=postgres://user:password@postgres:5432/weatherapi?sslmode=disable
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - WEATHER_API_BASE_URL=${WEATHER_API_BASE_URL}
      - OPENWEATHERMAP_API_KEY=${OPENWEATHERMAP_API_KEY}
      - OPENWEATHERMAP_BASE_URL=${OPENWEATHERMAP_BASE_URL}
      - BASE_URL=${BASE_URL}
      - PORT=${PORT}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - HTTP_READ_TIMEOUT=${HTTP_READ_TIMEOUT}
      - HTTP_WRITE_TIMEOUT=${HTTP_WRITE_TIMEOUT}
      - REDIS_ADDRESS=${REDIS_ADDRESS}
      - REDIS_TTL=${REDIS_TTL}
      - REDIS_DIAL_TIMEOUT=${REDIS_DIAL_TIMEOUT}
      - REDIS_READ_TIMEOUT=${REDIS_READ_TIMEOUT}
      - REDIS_WRITE_TIMEOUT=${REDIS_WRITE_TIMEOUT}
      - REDIS_POOL_SIZE=${REDIS_POOL_SIZE}
      - REDIS_MIN_IDLE_CONNS=${REDIS_MIN_IDLE_CONNS}
      - HTTP_CLIENT_TIMEOUT=${HTTP_CLIENT_TIMEOUT}
    volumes:
      - .:/app

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=weatherapi
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: weather-api-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - app

  grafana:
      image: grafana/grafana
      container_name: grafana
      ports:
        - "3000:3000"
      environment:
        - GF_DATABASE_TYPE=sqlite3
        - GF_DATABASE_PATH=/var/lib/grafana/grafana.db
        - GF_DATABASE_CONCURRENCY=1
        - GF_DATABASE_MAX_OPEN_CONNS=0
        - GF_DATABASE_MAX_IDLE_CONNS=2
        - GF_DATABASE_CONN_MAX_LIFETIME=14400
      depends_on:
        - prometheus
      volumes:
        - grafana_data:/var/lib/grafana
        - ./monitoring/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
        - ./monitoring/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
        - ./monitoring/dashboards:/etc/grafana/provisioning/dashboards

volumes:
  redis_data:
  grafana_data: